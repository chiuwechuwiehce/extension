<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="{5#E@lK2+q!h4jVrcD(8">rands</variable><variable id="x(v,!#R,NEZ[_(9ykmvV">randadd</variable><variable id="X#HA9);r.gv#Sqw(sJ]/">rtable</variable></variables><block type="pxt-on-start" x="10" y="10"><statement name="HANDLER"><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let ry = 0" numlines="1" declaredvars="ry"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let rx = 0" numlines="1" declaredvars="rx"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let tablelength = 0" numlines="1" declaredvars="tablelength"></mutation><next><block type="variables_set"><field name="VAR" id="{5#E@lK2+q!h4jVrcD(8">rands</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with"><mutation items="1" horizontalafter="3"></mutation><value name="ADD0"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block></value></block></value><next><block type="variables_set"><field name="VAR" id="x(v,!#R,NEZ[_(9ykmvV">randadd</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block></value><next><block type="variables_set"><field name="VAR" id="X#HA9);r.gv#Sqw(sJ]/">rtable</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block></value><next><block type="variables_set"><field name="VAR" id="x(v,!#R,NEZ[_(9ykmvV">randadd</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with"><mutation items="0" horizontalafter="3"></mutation></block></value><next><block type="variables_set"><field name="VAR" id="{5#E@lK2+q!h4jVrcD(8">rands</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with"><mutation items="0" horizontalafter="3"></mutation></block></value><next><block type="variables_set"><field name="VAR" id="X#HA9);r.gv#Sqw(sJ]/">rtable</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with"><mutation items="0" horizontalafter="3"></mutation></block></value><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace extras {" line1="    /**" line2="     * Lights a random tile." line3="     */" line4="    //% blockId=&quot;specialrandomtile&quot;" line5="    //% block=&quot;light random tile&quot;" line6="    export function randomtile(): void{" line7="        let randx = randint(0,4)" line8="        let randy = randint(0,4)" line9="        randadd.push(randx)" line10="        randadd.push(randy)" line11="        rands.push(randadd)" line12="        randadd = []" line13="        tablelength = rands.length" line14="        for (let i = 0; i &lt; tablelength; i++) {" line15="            rtable = rands[i-1] " line16="            rx = rtable[0]" line17="            ry = rtable[1]" line18="            if (randx == rx){" line19="                return;" line20="            }" line21="            if (randy == ry){" line22="                return;" line23="            }" line24="            led.plot(randx,randy)" line25="        }" line26="    }" line27="    /**" line28="     * Lights a random tile. with random transparency." line29="     */" line30="    //% blockId=&quot;specialrandomtiletransparency&quot;" line31="    //% block=&quot;light random transparency tile&quot;" line32="    export function randomtiletransparency(): void {" line33="        let randx2 = randint(0, 4)" line34="        let randy2 = randint(0, 4)" line35="        let randbright = randint(0,255)" line36="        led.plotBrightness(randx2, randy2,randbright)" line37="    }" line38="}" numlines="39"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>